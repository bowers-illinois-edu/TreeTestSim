q()
styler:::style_active_file()
source("~/repos/TreeTestsSim/R/tree_test_sims.R")
get_level_info(2,3)
get_level_info(k=2,l=3)
et_level_info() returns correct sizes and offsets", {
test_that("get_level_info() returns correct sizes and offsets", {
k <- 2
l <- 3
info <- get_level_info(k, l)
expect_equal(info$level_sizes, c(1, 2, 4, 8)) # 2^(0:3)
expect_equal(info$level_offsets, c(0, 1, 3, 7))
expect_equal(info$n_tot, 15)
total_nodes <- (k^L - 1) / (k - 1)
expect_equal(info$n_tot,total_nodes)
})
library(testthat)
source("../../R/tree_test_sims.R") # Source the file with the code
test_that("get_level_info() returns correct sizes and offsets", {
k <- 2
l <- 3
info <- get_level_info(k, l)
expect_equal(info$level_sizes, c(1, 2, 4, 8)) # 2^(0:3)
expect_equal(info$level_offsets, c(0, 1, 3, 7))
expect_equal(info$n_tot, 15)
total_nodes <- (k^L - 1) / (k - 1)
expect_equal(info$n_tot,total_nodes)
})
test_that("get_level_info() returns correct sizes and offsets", {
k <- 2
l <- 3
info <- get_level_info(k, l)
expect_equal(info$level_sizes, c(1, 2, 4, 8)) # 2^(0:3)
expect_equal(info$level_offsets, c(0, 1, 3, 7))
expect_equal(info$n_tot, 15)
total_nodes <- (k^l - 1) / (k - 1)
expect_equal(info$n_tot,total_nodes)
})
total_nodes
k <- 2
l <- 3
info <- get_level_info(k, l)
expect_equal(info$level_sizes, c(1, 2, 4, 8)) # 2^(0:3)
expect_equal(info$level_offsets, c(0, 1, 3, 7))
expect_equal(info$n_tot, 15)
total_nodes <- (k^l - 1) / (k - 1)
total_nodes
(k^(l+1)-1)/(k-1)
test_that("get_level_info() returns correct sizes and offsets", {
k <- 2
l <- 3
info <- get_level_info(k, l)
expect_equal(info$level_sizes, c(1, 2, 4, 8)) # 2^(0:3)
expect_equal(info$level_offsets, c(0, 1, 3, 7))
expect_equal(info$n_tot, 15)
total_nodes <- (k^(l+1) - 1) / (k - 1)
expect_equal(info$n_tot,total_nodes)
})
info
# levels: d=0 => 1 node, d=1 => 2 nodes, d=2 => 4 leaves
info <- get_level_info(k = 2, l = 2)
# The root is level 0 => global idx=1 => local j=1 at d=0
# children of root => level 1 => 2 nodes => global indices 2,3
cidx <- children_indices(d = 0, j = 1, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(2, 3))
# now for level=1, local j=1 => global idx=2 => children => global indices 4,5
cidx <- children_indices(d = 1, j = 1, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(4, 5))
info <- get_level_info(k = 2, l = 3)
info
children_indices(d = 0, j = 1, k = 2, level_offsets = info$level_offsets)
children_indices(d = 1, j = 1, k = 2, level_offsets = info$level_offsets)
children_indices(d = 1, j = 3, k = 2, level_offsets = info$level_offsets)
children_indices(d = 1, j = 2, k = 2, level_offsets = info$level_offsets)
# levels: d=0 => 1 node, d=1 => 2 nodes, d=2 => 4 leaves
info <- get_level_info(k = 2, l = 3)
# The root is level 0 => global idx=1 => local j=1 at d=0
# children of root => level 1 => 2 nodes => global indices 2,3
cidx <- children_indices(d = 0, j = 1, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(2, 3))
# now for level=1, local j=1 => global idx=2 => children => global indices 4,5
cidx <- children_indices(d = 1, j = 1, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(4, 5))
cidx <- children_indices(d = 1, j = 2, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(6, 7))
cidx <- children_indices(d = 1, j = 3, k = 2, level_offsets = info$level_offsets)
icidx
cidx
cidx <- children_indices(d = 2, j = 3, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(8, 9))
cidx <- children_indices(d = 2, j = 1, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(8, 9))
cidx <- children_indices(d = 2, j = 2, k = 2, level_offsets = info$level_offsets)
expect_equal(cidx, c(10, 11))
## Look at the leaves
cidx <- children_indices(d = 3, j = 1, k = 2, level_offsets = info$level_offsets)
cidx
expect_equal(cidx, 0)
expect_equal(cidx, integer(0))
expect_equal(cidx, 0L)
info
