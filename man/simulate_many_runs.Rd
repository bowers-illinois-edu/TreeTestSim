% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_test_sims.R
\name{simulate_many_runs}
\alias{simulate_many_runs}
\title{Monte Carlo Simulation of a Hierarchical Gated Testing Procedure}
\usage{
simulate_many_runs(
  n_sim = 10000,
  k = 2,
  l = 3,
  t = 0.5,
  alpha = 0.05,
  beta_params = c(0.1, 1),
  local_adjust_fn = local_simes
)
}
\arguments{
\item{n_sim}{Number of simulation replicates.}

\item{k}{Integer; branching factor.}

\item{l}{Integer; depth of the tree.}

\item{t}{Numeric in \eqn{[0,1]}; probability that a leaf is non-null.}

\item{alpha}{Numeric in \eqn{(0,1)}; significance level threshold.}

\item{beta_params}{Numeric vector of length 2, \code{c(a,b)}, specifying Beta(a,b)
for alt nodes. The final alt p-value is scaled to be in \eqn{[\text{parent\_p},1]}.}

\item{local_adjust_fn}{A function that takes the child p-values of a node
and returns a single value (like the min or max p-value) that can be used to
decide on a local gating procedure. For now the default is the
\code{local_simes} function.}
}
\value{
A numeric estimate of the familywise error rate:
the proportion of runs that had at least one null node p-value \eqn{\le \alpha}.
}
\description{
Repeats \code{n_sim} independent realizations of the following steps:
\enumerate{
\item Create a k-ary tree with \code{k} nodes per level and \code{l} levels
\item Randomly assign \code{t} proportion of the leaves (nodes with no children) as alt,
and propagate alt status upward. Here alt means non-null treatment effect
\item Perform a top-down testing procedure with:
\itemize{
\item strict gating: if a node's p-value \eqn{> \alpha}, do not test children
\item local gating: among each parent's \eqn{k} children, if the local version of a
globaltest that produces a p-value
\eqn{> \alpha}, block deeper descendants. By default we use the Simes
procedure for the children of each parent for this local gate.
\item monotonic p-values: null => \eqn{\mathrm{Uniform}(\text{parent\_p},1)},
alt => scaled \eqn{\mathrm{Beta}(a,b)} to \eqn{[\text{parent\_p},1]}
\item track any null node (a non-alt node) \eqn{\le \alpha} as a false rejection
\item Estimate the familywise error rate (FWER) as
the fraction of runs in which at least one null node was \eqn{\le \alpha}.
}
}
}
\examples{
\dontrun{
set.seed(123)
fwer_est <- simulate_many_runs(
  n_sim = 2000,
  k = 2,
  l = 3,
  t = 0.5,
  alpha = 0.05,
  beta_params = c(0.1, 1),
  local_adjust_fn = local_simes
)
fwer_est
}

}
\seealso{
\code{\link{simulate_single_run}}, \code{\link{assign_alt}}
}
