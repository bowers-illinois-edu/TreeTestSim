% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_table_approach_alpha_varies.R
\name{simulate_many_runs_DT}
\alias{simulate_many_runs_DT}
\title{Simulate the Family-Wise Error Rate (FWER) using a Data.table-based Tree with Alpha Options}
\usage{
simulate_many_runs_DT(
  n_sim,
  t,
  k,
  max_level,
  alpha,
  N_total,
  beta_base = 0.1,
  adj_effN = TRUE,
  local_adj_p_fn = local_simes,
  return_details = FALSE,
  global_adj = "hommel",
  alpha_method = "fixed",
  final_global_adj = "none",
  multicore = FALSE
)
}
\arguments{
\item{n_sim}{Integer. The number of simulation replicates.}

\item{t}{Numeric in \link{0,1}. The probability that a leaf is non-null.}

\item{k}{Integer. The branching factor.}

\item{max_level}{Integer. The maximum level (depth) of the tree.}

\item{alpha}{Numeric. The nominal significance level.}

\item{N_total}{Numeric. The total sample size at the root.}

\item{beta_base}{Numeric. The base parameter for the Beta distribution.}

\item{return_details}{Logical.}

\item{alpha_method}{Character. One of \code{"fixed"}, \code{"spending"}, or \code{"investing"}.}

\item{spend_frac}{Numeric. (For spending) Fraction of parent's α allocated to children.}

\item{invest_frac}{Numeric. (For investing) Fraction of parent's α allocated to children.}

\item{invest_bonus}{Numeric. (For investing) Bonus added to the allocation.}

\item{...}{Additional arguments passed to \code{simulate_test_DT()}.}
}
\value{
A numeric value in \link{0,1} giving the estimated FWER (plus additional simulation summary metrics).
}
\description{
Runs the hierarchical testing procedure on complete k-ary trees (generated via \code{generate_tree_DT()})
\code{n_sim} times and returns the estimated FWER. The user may choose whether to use a fixed α,
α–spending, or a rudimentary α–investing scheme.
}
\examples{
fwer <- simulate_many_runs_DT(
  n_sim = 1000, t = 0.2, k = 3, max_level = 3,
  alpha = 0.05, N_total = 1000, beta_base = 0.1,
  alpha_method = "investing", invest_frac = 0.5, invest_bonus = 0.01
)
print(fwer)

}
